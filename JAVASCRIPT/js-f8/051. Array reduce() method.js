// REDUCE: 
/**
 * khi mu·ªën nh·∫≠n v·ªÅ m·ªôt gi√° tr·ªã duy nh·∫•t sau khi handle g√¨ ƒë√≥ c√°c element trong m·ªôt array
 * 
 */

var courses = [
    {
        id: 1,
        name: 'Javascript',
        coin: 250
    },
    {
        id: 2,
        name: 'HTML, CSS',
        coin: 0
    },
    {
        id: 3,
        name: 'Ruby',
        coin: 0
    },
    {
        id: 4,
        name: 'PHP',
        coin: 400
    },
    {
        id: 5,
        name: 'ReactJS',
        coin: 500
    },
    {
        id: 6,
        name: 'PHP',
        coin: 0
    }
];
// // bi·∫øn l∆∞u tr·ªØ
// var totalCoin = 0
// // l·∫∑p qua c√°c ph·∫ßn t·ª≠ 
// for (var course of courses) {
//     // th·ª±c hi·ªán vi·ªác l∆∞u tr·ªØ
//     totalCoin += course.coin;
// }
// console.log("üöÄ ~ file: 51. Array reduce() method.js:37 ~ totalCoin:", totalCoin)

// reduce
var i = 0;
function coinHandler(accumulator, currentValue, currentIndex, originArray) {
    i++;
    var total = accumulator + currentValue.coin;

    console.table({
        'L∆∞·ª£t ch·∫°y: ': i,
        'Bi·∫øn t√≠ch tr·ªØ: ': accumulator,
        'Gi√° kh√≥a h·ªçc: ': currentValue.coin,
        'T√≠ch tr·ªØ ƒë∆∞·ª£c: ': total
    });
    console.log(currentValue);
    return total;
}
// originArray va course c√πng tr·ªè v·ªÅ m·ªôt v
var totalCoinUsingReduce = courses.reduce(coinHandler, 0); // initial value = 0
console.log("üöÄ ~ file: 51. Array reduce() method.js:61 ~ totalCoinUsingReduce:", totalCoinUsingReduce)

// initial value = 0 s·∫Ω ƒë∆∞·ª£c g√°n cho accumulator trong l·∫ßn ch·∫°y ƒë·∫ßu ti√™n

// reduce s·∫Ω return l·∫°i gi√° tr·ªã sau c√πng t√≠ch tr·ªØ ƒëc

